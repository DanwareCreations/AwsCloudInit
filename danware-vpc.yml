AWSTemplateFormatVersion: '2010-09-09'

Resources:
  # The main VPC resource
  MainVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.20.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: false
      InstanceTenancy: default
  
  # Route Tables and Routes
  PubRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainVPC
  PrivRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainVPC
  DanwareIGW:
    Type: AWS::EC2::InternetGateway
  IGWRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PubRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: DanwareIGW
    DependsOn:
    - DanwareIGW
  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: DanwareIGW
      VpcId:
        Ref: MainVPC
  
  # Network ACL for the public subnet
  PubACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: MainVPC
  InEphemeraPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 130
      Egress: false
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 1024
        To: 65535
      CidrBlock: 0.0.0.0/0
  InICMPPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 140
      Egress: 'false'
      RuleAction: allow
      Protocol: 1
      Icmp:
        Code: "-1"
        Type: "-1"
      CidrBlock: 0.0.0.0/0
  InHTTPPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 100
      Egress: false
      RuleAction: allow
      Protocol: 6
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
  InHTTPSPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 110
      Egress: false
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 443
        To: 443
      CidrBlock: 0.0.0.0/0
  InSSH0Public:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 120
      Egress: false
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 22
        To: 22
      CidrBlock: 107.218.90.121/32
  InSSH1Public:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 121
      Egress: 'false'
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 22
        To: 22
      CidrBlock: 130.101.99.0/24
      RuleNumber: 121
      Egress: false
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 22
        To: 22
      CidrBlock: 130.101.99.0/24
  InSSH2Public:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 122
      Egress: false
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 22
        To: 22
      CidrBlock: 10.20.128.0/17

  OutEphemeraPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 130
      Egress: true
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 1024
        To: 65535
      CidrBlock: 0.0.0.0/0
  OutICMPPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 140
      Egress: true
      RuleAction: allow
      Protocol: 1
      Icmp:
        Code: "-1"
        Type: "-1"
      CidrBlock: 0.0.0.0/0
  OutSSHPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 120
      Egress: true
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 22
        To: 22
      CidrBlock: 10.20.0.0/16
  OutHTTPSPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 110
      Egress: true
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 443
        To: 443
      CidrBlock: 0.0.0.0/0
  OutHTTPPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PubACL
      RuleNumber: 100
      Egress: true
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 80
        To: 80
      CidrBlock: 0.0.0.0/0
  
  # Network ACL for the private subnet
  PrivACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: MainVPC
  InSSHPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivACL
      RuleNumber: 120
      Egress: false
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 22
        To: 22
      CidrBlock: 10.20.128.0/17
  InICMPPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivACL
      RuleNumber: 140
      Egress: false
      RuleAction: allow
      Protocol: 1
      Icmp:
        Code: "-1"
        Type: "-1"
      CidrBlock: 10.20.0.0/16
  InEphemeraPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivACL
      RuleNumber: 130
      Egress: 'false'
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 1024
        To: 65535
      CidrBlock: 0.0.0.0/0
  
  OutHTTPPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivACL
      RuleNumber: 100
      Egress: true
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 80
        To: 80
      CidrBlock: 0.0.0.0/0
  OutHTTPSPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivACL
      RuleNumber: 110
      Egress: true
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 443
        To: 443
      CidrBlock: 0.0.0.0/0
  OutEphemeraPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivACL
      RuleNumber: 130
      Egress: true
      RuleAction: allow
      Protocol: 6
      PortRange:
        From: 1024
        To: 65535
      CidrBlock: 10.20.0.0/16
  OutICMPPrivate:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PrivACL
      RuleNumber: 140
      Egress: true
      RuleAction: allow
      Protocol: 1
      Icmp:
        Code: "-1"
        Type: "-1"
      CidrBlock: 0.0.0.0/0

Outputs:
  VPC:
    Description: The ID of the new VPC
    Value: !Ref MainVPC
    Export:
      Name: MainVPC
  PublicRT:
    Description: The ID of the new route table for public subnets
    Value: !Ref PubRT
    Export:
      Name: PublicRT
  PrivateRT:
    Description: The ID of the new route table for private subnets
    Value: !Ref PrivRT
    Export:
      Name: PrivateRT
  PublicACL:
    Description: The ID of the new network ACL for public subnets
    Value: !Ref PubACL
    Export:
      Name: PublicACL
  PrivateACL:
    Description: The ID of the new network ACL for private subnets
    Value: !Ref PrivACL
    Export:
      Name: PrivateACL
