AWSTemplateFormatVersion: 2010-09-09

Description: Returns AMIs and other values that are specific to the requested AWS Region.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    -
      Parameters:
      - LambdaS3Bucket
      - S3Key

Parameters:
  LambdaS3Bucket:
    Type: String
    Default: mycompany-region-lambda
    MinLength: 3
    MaxLength: 63
    AllowedPattern: ^[0-9A-Za-z\.\-_]*(?<!\.)$
    Description: Name of an existing S3 bucket where the Lambda deployment package is stored. This bucket must reside in the same AWS region where you are creating the Lambda function.
    ConstraintDescription: must contain only alphanumeric characters and/or one or more of the symbols .-_?<!
  S3Key:
    Type: String
    Default: ami-lookup.zip
    MinLength: 1
    MaxLength: 1024
    ConstraintDescription: must be a valid S3 key of length 1-1024.
    Description: The name (S3 key) of the deployment package for this function, inside the Lambda S3 bucket.

Resources:
  AMILookupFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: AmiLookup
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref S3Key
      Handler: ami-lookup.handler
      Description: This Lambda function returns returns AMIs and other values that are specific to the requested AWS Region
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs8.10
      Timeout: 30        # Seconds, default is 3
      MemorySize: 128   # MB, must be a multiple of 64 <= 3008, default is 128
      Environment:
        Variables: {}
      # KmsKeyArn:      # Only needed if Environment Variables are provided
      VpcConfig:
        SecurityGroupIds: []
        SubnetIds: []
      # DeadLetterConfig:
        # TargetArn:    # Only required if we want to send unprocessed events to, e.g., an SNS topic or SQS queue for further investigation
      #ReservedConcurrentExecutions:    # Only required if we need to limit concurrent executions due to, e.g., VPC private IP or database connection limits
                                        # Max 900 (since unreserved concurrent execution pool for a region is 1000, 100 of which cannot be reserved)
                                        # Each concurrent execution consumes a private IP in the VPC, so must not be larger than subnet size limits
                                        # Each concurrent execution consumes a database connection, so must not be larger than our database instance's max connections
      TracingConfig:
        Mode: Active
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ami-lookup-lambda-role
      Path: /ami-lookup-lambda-role/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - # Allow the Lambda service to assume this role
          Sid: AssumeRole
          Effect: Allow
          Principal: { Service: lambda.amazonaws.com }
          Action: sts:AssumeRole
      Policies:
      - PolicyName: ami-lookup-lambda-role
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - # Allow sending logs to a log group
            Sid: SendLogs
            Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - # Allow describing EC2 images, so we can find the latest AMI image IDs!
            Sid: LambdaDescribeImages
            Effect: Allow
            Action: ec2:DescribeImages
            Resource: "*"
Outputs:
  AMILookupFunction:
    Value: !Ref AMILookupFunction
    Description: FunctionName of the new AMI-Lookup Lambda function.
