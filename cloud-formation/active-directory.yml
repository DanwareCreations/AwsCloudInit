AWSTemplateFormatVersion: 2010-09-09

Description: A Samba 4 Active Directory Compatible Server

Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups:
    -
      Label:
        default: Subnet Configuration
      Parameters:
      - NetworkStackName
      - SubnetCidrBlocks
    - 
      Label:
        default: Active Directory Configuration
      Parameters:
      - DirectoryName
      - DirectoryNetbiosName
      - DirectoryPassword

Parameters:
  NetworkStackName:
    Type: String
    Default: MainVPC
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Description: Name of an active CloudFormation stack that contains the networking resources needed to create a bastion host in its own public subnet.
    ConstraintDescription: must contain only alphanumeric characters and/or hyphens, and start with a letter
  SubnetCidrBlocks:
    Type: CommaDelimitedList
    Default: 10.0.130.0/28, 10.0.130.16/28
    Description: A list of two subnet IDs for the directory servers.  AWS Directory Service creates a directory server and a DNS server in each subnet.  Block sizes must be between a /16 netmask and a /28 netmask.
    ConstraintDescription: must be two valid CIDR blocks (e.g., 10.20.114.0/24) separated by a comma, with no comma after the second block.
    
  DirectoryName:
    Type: String
    Default: corp.example.com
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$
    Description: A fully qualified domain name (for example, corp.example.com). This name will resolve inside your VPC only. It does not need to be publicly resolvable.
    ConstraintDescription: must contain only alphanumeric characters and/or hyphens, and start with a letter
  DirectoryNetbiosName:
    Type: String
    Default: CORP
    MinLength: 1
    MaxLength: 15
    AllowedPattern: ^[^\\/:*?\"\<\>|.]+[^\\/:*?\"<>|]*$
    Description: The NetBIOS name for your domain. This value must be 15 characters or less.
    ConstraintDescription: must contain only alphanumeric characters and/or hyphens, and start with a letter
  DirectoryPassword:
    Type: String
    NoEcho: true
    AllowedPattern: (?=^.{8,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*
    Description: The password for the default directory administrative user.
    ConstraintDescription: "must have an 8-character minimum with at least one character having at least three of these attributes: lowercase, uppercase, numeric, and special characters."

Resources:
  # Network ACL for the new public subnet(s)
  PubACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !ImportValue MainVPC
  InEphemeraAcl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PubACL
      RuleNumber: 130
      Egress: false
      RuleAction: allow
      Protocol: 6
      PortRange: { From: 1024, To: 65535 }
      CidrBlock: 0.0.0.0/0
  InIcmpAcl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PubACL
      RuleNumber: 140
      Egress: false
      RuleAction: allow
      Protocol: 1
      Icmp: { Code: -1, Type: -1 }
      CidrBlock: 0.0.0.0/0
  OutIcmpAcl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PubACL
      RuleNumber: 140
      Egress: true
      RuleAction: allow
      Protocol: 1
      Icmp: { Code: -1, Type: -1 }
      CidrBlock: 0.0.0.0/0
  
  # Define the two subnets in different Availability Zones
  DirectorySubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue MainVPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Select [ 0, !Ref SubnetCidrBlocks ]
      MapPublicIpOnLaunch: true
  RTAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !ImportValue PublicRouteTable
      SubnetId: !Ref DirectorySubnet1
  ACLAssoc1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PubACL
      SubnetId: !Ref DirectorySubnet1
      
  DirectorySubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue MainVPC
      AvailabilityZone: !Select [ 1, !GetAZs ]
      CidrBlock: !Select [ 1, !Ref SubnetCidrBlocks ]
      MapPublicIpOnLaunch: true
  RTAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !ImportValue PublicRouteTable
      SubnetId: !Ref DirectorySubnet2
  ACLAssoc2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PubACL
      SubnetId: !Ref DirectorySubnet2
      
  # Active Directory
  MainAD:
    Type: AWS::DirectoryService::SimpleAD
    Properties: 
      Description: A Samba 4 Active Directory Compatible Server for the company.
      EnableSso: false  # Single sign-on for computers connected to the AD (like WorkSpaces)
      Name: !Ref DirectoryName
      ShortName: !Ref DirectoryNetbiosName
      Password: !Ref DirectoryPassword
      Size: Small
      VpcSettings:
        VpcId: !ImportValue MainVPC
        SubnetIds: 
        - !Ref DirectorySubnet1
        - !Ref DirectorySubnet2
            
Outputs:
  ActiveDirectory:
    Value: !Ref MainAD
    Description: The ID of the new Active Directory 